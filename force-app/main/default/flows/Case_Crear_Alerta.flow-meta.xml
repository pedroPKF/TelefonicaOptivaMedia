<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Account_anonimo_encontrado_ID</name>
        <label>Account anonimo encontrado ID</label>
        <locationX>413</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_account_anonimo.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Es_un_nuevo_caso</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Account_encontrado_ID</name>
        <label>Account encontrado ID</label>
        <locationX>149</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Account.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Es_un_nuevo_caso</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Bypass_activado</name>
        <label>Bypass activado?</label>
        <locationX>239</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Is_origen_Formulario_Publico_Formulario_Privado_o_Correo</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Si_activo</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Bypass</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Si, activo</label>
        </rules>
    </decisions>
    <decisions>
        <name>Es_un_nuevo_caso</name>
        <label>Es un nuevo caso?</label>
        <locationX>281</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>Ha_cambiado_el_estado_del_caso</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Si_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsNewCase</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Crear_Alerta_Alta_de_Caso</targetReference>
            </connector>
            <label>Sí</label>
        </rules>
    </decisions>
    <decisions>
        <name>Ha_cambiado_el_estado_del_caso</name>
        <label>¿Ha cambiado el estado del caso?</label>
        <locationX>512</locationX>
        <locationY>1163</locationY>
        <defaultConnector>
            <targetReference>Ha_sido_marcado_es_reclamacion</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Si_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_Picklistvalueinfo</targetReference>
            </connector>
            <label>Sí</label>
        </rules>
    </decisions>
    <decisions>
        <name>Ha_sido_marcado_es_reclamacion</name>
        <label>¿Ha sido marcado &apos;Es reclamación&apos;?</label>
        <locationX>710</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Si_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Es_reclamacion__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Es_reclamacion__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Apertura_de_incidencia</targetReference>
            </connector>
            <label>Sí</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_origen_Formulario_Publico_Formulario_Privado_o_Correo</name>
        <label>Is  origen Formulario Publico, Formulario Privado o Correo?</label>
        <locationX>693</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Si</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Formulario privado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Formulario publico</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contract</targetReference>
            </connector>
            <label>Sí</label>
        </rules>
    </decisions>
    <decisions>
        <name>Si_contrato_encontrado</name>
        <label>Si contrato encontrado</label>
        <locationX>281</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Get_account_anonimo</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Contrato_encontrado</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Contract</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>Contrato encontrado</label>
        </rules>
    </decisions>
    <description>si se actualiza, verificar si se ha cambiado el estado del caso, recuperar el milestone del caso correspondiente al estado anterior, si existe, para actualizarlo como completado</description>
    <environments>Default</environments>
    <formulas>
        <name>Bypass</name>
        <dataType>Boolean</dataType>
        <expression>{!$Setup.Bypass_flow__c.IsActive__c}</expression>
    </formulas>
    <formulas>
        <description>devuelve un boolean en el caso que el case es nuevo</description>
        <name>IsNewCase</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>IsRecordTypeChanged</name>
        <dataType>Boolean</dataType>
        <expression>ISCHANGED({!$Record.RecordType.Id})</expression>
    </formulas>
    <formulas>
        <name>NOW</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <interviewLabel>Case - Crear Alerta {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Crear Alerta</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Apertura_de_incidencia</name>
        <label>Apertura de incidencia</label>
        <locationX>578</locationX>
        <locationY>1379</locationY>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Asunto__c</field>
            <value>
                <stringValue>Apertura de incidencia</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Case__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Tipo__c</field>
            <value>
                <stringValue>Apertura de incidencia</stringValue>
            </value>
        </inputAssignments>
        <object>Alerta__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Crear_Alerta_Alta_de_Caso</name>
        <label>Crear Alerta Alta de Caso</label>
        <locationX>50</locationX>
        <locationY>1163</locationY>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Asunto__c</field>
            <value>
                <stringValue>Alta de caso</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Case__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Tipo__c</field>
            <value>
                <stringValue>Alta de caso</stringValue>
            </value>
        </inputAssignments>
        <object>Alerta__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>149</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_encontrado_ID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Contract.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_account_anonimo</name>
        <label>Get account anonimo</label>
        <locationX>413</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_anonimo_encontrado_ID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Anonimo__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Contract</name>
        <label>Get Contract</label>
        <locationX>281</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Si_contrato_encontrado</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>email_de_contrato__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Activated</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contract</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Milestone_Type_Id</name>
        <label>Get Milestone Type Id</label>
        <locationX>314</locationX>
        <locationY>1379</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Actualizar_Mileston</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Picklistvalueinfo.Label</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>MilestoneType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Picklistvalueinfo</name>
        <label>get Picklistvalueinfo</label>
        <locationX>314</locationX>
        <locationY>1271</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Milestone_Type_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case.Status</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Status</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PicklistValueInfo</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Actualizar_Mileston</name>
        <label>Actualizar Mileston</label>
        <locationX>314</locationX>
        <locationY>1487</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CaseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>MilestoneTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Milestone_Type_Id.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsCompleted</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>CompletionDate</field>
            <value>
                <elementReference>NOW</elementReference>
            </value>
        </inputAssignments>
        <object>CaseMilestone</object>
    </recordUpdates>
    <start>
        <locationX>113</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Bypass_activado</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
